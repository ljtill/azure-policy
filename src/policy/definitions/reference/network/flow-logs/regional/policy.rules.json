{
  "if": {
    "allOf": [
      {
        "field": "type",
        "equals": "Microsoft.Network/networkSecurityGroups"
      },
      {
        "field": "location",
        "equals": "[parameters('Location')]"
      }
    ]
  },
  "then": {
    "effect": "deployIfNotExists",
    "details": {
      "type": "Microsoft.Network/networkWatchers/flowlogs",
      "name": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id'))), 'null/null', concat(split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[8], '/', split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[10]))]",
      "existenceCondition": {
        "allOf": [
          {
            "field": "Microsoft.Network/networkWatchers/flowLogs/enabled",
            "equals": "true"
          }
        ]
      },
      "existenceScope": "resourceGroup",
      "roleDefinitionIds": [
        "/providers/microsoft.authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7",
        "/providers/microsoft.authorization/roleDefinitions/81a9662b-bebf-436f-a333-f67b29880f12",
        "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
        "/providers/microsoft.authorization/roleDefinitions/17d1049b-9a84-46fb-8f53-869881c3d3ab"
      ],
      "resourceGroupName": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), 'NetworkWatcherRG', split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[4])]",
      "deploymentScope": "subscription",
      "deployment": {
        "location": "eastus",
        "properties": {
          "mode": "Incremental",
          "parameters": {
            "location": {
              "value": "[field('location')]"
            },
            "networkSecurityGroup": {
              "value": "[field('id')]"
            },
            "workspace": {
              "value": "[parameters('workspace')]"
            },
            "retention": {
              "value": "[parameters('retention')]"
            },
            "interval": {
              "value": "[parameters('interval')]"
            },
            "storageId": {
              "value": "[parameters('storageId')]"
            }
          },
          "template": {
            "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
              "location": {
                "type": "string"
              },
              "networkSecurityGroup": {
                "type": "string"
              },
              "workspace": {
                "type": "string"
              },
              "retention": {
                "type": "int"
              },
              "interval": {
                "type": "int"
              },
              "storageId": {
                "type": "string"
              }
            },
            "variables": {
              "resourceGroupName": "[split(parameters('networkSecurityGroup'), '/')[4]]",
              "securityGroupName": "[split(parameters('networkSecurityGroup'), '/')[8]]",
              "storageAccountId": "[parameters('storageId')]"
            },
            "resources": [
              {
                "type": "Microsoft.Resources/deployments",
                "apiVersion": "2019-10-01",
                "name": "[concat('NetworkWatcherRG', '.', variables('securityGroupName'))]",
                "resourceGroup": "NetworkWatcherRG",
                "properties": {
                  "mode": "Incremental",
                  "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                      {
                        "type": "Microsoft.Network/networkWatchers",
                        "apiVersion": "2020-05-01",
                        "name": "[concat('NetworkWatcher_', toLower(parameters('location')))]",
                        "location": "[parameters('location')]",
                        "properties": {},
                        "resources": [
                          {
                            "type": "flowLogs",
                            "apiVersion": "2019-11-01",
                            "name": "[concat(variables('securityGroupName'), '-Network-flowlog')]",
                            "location": "[parameters('location')]",
                            "properties": {
                              "enabled": true,
                              "format": {
                                "type": "JSON",
                                "version": 2
                              },
                              "retentionPolicy": {
                                "days": "[parameters('retention')]",
                                "enabled": true
                              },
                              "flowAnalyticsConfiguration": {
                                "networkWatcherFlowAnalyticsConfiguration": {
                                  "enabled": true,
                                  "trafficAnalyticsInterval": "[parameters('interval')]",
                                  "workspaceResourceId": "[parameters('workspace')]"
                                }
                              },
                              "storageId": "[variables('storageAccountId')]",
                              "targetResourceId": "[parameters('networkSecurityGroup')]"
                            },
                            "dependsOn": [
                              "[concat('NetworkWatcher_', toLower(parameters('location')))]"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                "dependsOn": []
              }
            ],
            "outputs": {}
          }
        }
      }
    }
  }
}
